/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import JavaApp.Obligations;
import static Admin.AdminFrame.WriteStudent;
import static JavaApp.LogInFrame.Student;
import static JavaApp.LogInFrame.arrayObligations;
import static JavaApp.LogInFrame.counterObligations;
import static JavaApp.LogInFrame.counterStudent;
import static JavaApp.LogInFrame.finalGrade;
import static JavaApp.LogInFrame.finalGradeCounter;
import java.awt.Color;

/**
 *
 * @author Samardzija Njegos
 */
public class AdjustStudent extends javax.swing.JFrame {

    /**
     * Creates new form AdjustStudent
     */
    public AdjustStudent() {
        initComponents();
        setBackground(new Color(0, 0, 0, 0));

        errTextID.setText(" ");
        errTextName.setText(" ");
        errTextUsername.setText(" ");
        errTextPass.setText(" ");
        errTextYear.setText(" ");
    }

    static String id;
    static String name;
    static String username;
    static String pass;
    static String year;

    public static void pass(String studentId, String studentName, String studentUsername, String studentPass, String studentYear) {
        id = studentId;
        name = studentName;
        username = studentUsername;
        pass = studentPass;
        year = studentYear;

        studentIDTextField.setText(id);
        studentNameTextField.setText(name);
        studentUsernameTextField.setText(username);
        studentPassTextField.setText(pass);
        studentYearTextField.setText(year);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newJPanel1 = new AddOns.TransparentPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        studentYearTextField = new javax.swing.JTextField();
        studentPassTextField = new javax.swing.JTextField();
        studentUsernameTextField = new javax.swing.JTextField();
        studentNameTextField = new javax.swing.JTextField();
        studentIDTextField = new javax.swing.JTextField();
        adjustStudentBtn = new AddOns.MyButton();
        exit = new AddOns.ProfilePicture();
        errTextID = new javax.swing.JLabel();
        errTextName = new javax.swing.JLabel();
        errTextUsername = new javax.swing.JLabel();
        errTextPass = new javax.swing.JLabel();
        errTextYear = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        newJPanel1.setBackground(new java.awt.Color(87, 87, 87));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Adjust student");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Student ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Student name:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Student username");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Student password");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Study year:");

        studentYearTextField.setBackground(new java.awt.Color(87, 87, 87));
        studentYearTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        studentYearTextField.setForeground(new java.awt.Color(255, 255, 255));
        studentYearTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        studentYearTextField.setSelectedTextColor(new java.awt.Color(87, 87, 87));
        studentYearTextField.setSelectionColor(new java.awt.Color(255, 255, 255));
        studentYearTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                studentYearTextFieldKeyTyped(evt);
            }
        });

        studentPassTextField.setBackground(new java.awt.Color(87, 87, 87));
        studentPassTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        studentPassTextField.setForeground(new java.awt.Color(255, 255, 255));
        studentPassTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        studentPassTextField.setSelectedTextColor(new java.awt.Color(87, 87, 87));
        studentPassTextField.setSelectionColor(new java.awt.Color(255, 255, 255));

        studentUsernameTextField.setBackground(new java.awt.Color(87, 87, 87));
        studentUsernameTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        studentUsernameTextField.setForeground(new java.awt.Color(255, 255, 255));
        studentUsernameTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        studentUsernameTextField.setSelectedTextColor(new java.awt.Color(87, 87, 87));
        studentUsernameTextField.setSelectionColor(new java.awt.Color(255, 255, 255));

        studentNameTextField.setBackground(new java.awt.Color(87, 87, 87));
        studentNameTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        studentNameTextField.setForeground(new java.awt.Color(255, 255, 255));
        studentNameTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        studentNameTextField.setSelectedTextColor(new java.awt.Color(87, 87, 87));
        studentNameTextField.setSelectionColor(new java.awt.Color(255, 255, 255));

        studentIDTextField.setBackground(new java.awt.Color(87, 87, 87));
        studentIDTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        studentIDTextField.setForeground(new java.awt.Color(255, 255, 255));
        studentIDTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        studentIDTextField.setSelectedTextColor(new java.awt.Color(87, 87, 87));
        studentIDTextField.setSelectionColor(new java.awt.Color(255, 255, 255));

        adjustStudentBtn.setText("Adjust Student");
        adjustStudentBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        adjustStudentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adjustStudentBtnActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(67, 67, 67));
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/turn-off.png"))); // NOI18N
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });

        errTextID.setForeground(java.awt.Color.red);
        errTextID.setText("jLabel7");

        errTextName.setForeground(java.awt.Color.red);
        errTextName.setText("jLabel8");

        errTextUsername.setForeground(java.awt.Color.red);
        errTextUsername.setText("jLabel9");

        errTextPass.setForeground(java.awt.Color.red);
        errTextPass.setText("jLabel10");

        errTextYear.setForeground(java.awt.Color.red);
        errTextYear.setText("jLabel11");

        javax.swing.GroupLayout newJPanel1Layout = new javax.swing.GroupLayout(newJPanel1);
        newJPanel1.setLayout(newJPanel1Layout);
        newJPanel1Layout.setHorizontalGroup(
            newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newJPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(adjustStudentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(newJPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newJPanel1Layout.createSequentialGroup()
                        .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newJPanel1Layout.createSequentialGroup()
                        .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(errTextID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(studentIDTextField)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE))
                        .addGap(8, 8, 8))
                    .addGroup(newJPanel1Layout.createSequentialGroup()
                        .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(errTextUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newJPanel1Layout.createSequentialGroup()
                        .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(errTextYear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(errTextPass, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(studentYearTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentUsernameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errTextName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(studentNameTextField)
                            .addComponent(studentPassTextField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())))
        );
        newJPanel1Layout.setVerticalGroup(
            newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newJPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errTextID)
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errTextName)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errTextUsername)
                .addGap(16, 16, 16)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentPassTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errTextPass)
                .addGap(17, 17, 17)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errTextYear)
                .addGap(17, 17, 17)
                .addComponent(adjustStudentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void adjustStudentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adjustStudentBtnActionPerformed
        String newId = studentIDTextField.getText();
        String newName = studentNameTextField.getText();
        String newUsername = studentUsernameTextField.getText();
        String newYear = studentYearTextField.getText();
        String newPass = studentPassTextField.getText();
        boolean found = false;

        errTextID.setText(" ");
        errTextName.setText(" ");
        errTextUsername.setText(" ");
        errTextPass.setText(" ");
        errTextYear.setText(" ");

        if (newId.isEmpty()) {
            found = true;
            errTextID.setText("ID not entered!");
        }
        if (newUsername.isEmpty()) {
            found = true;
            errTextUsername.setText("Username not entered!");
        }
        if (newName.isEmpty()) {
            found = true;
            errTextName.setText("Name not entered!");
        }
        if (!newName.contains(" ")) {
            found = true;
            errTextName.setText("Name not entered correctly!");
        }
        if (newPass.isEmpty() || newPass.equals(" ")) {
            found = true;
            errTextPass.setText("Password not entered!");
        }
        if (!newYear.equals("1") && !newYear.equals("2") && !newYear.equals("3")) {
            found = true;
            errTextYear.setText("Year must be 1, 2 or 3!");
        }

        for (int i = 0; i < counterStudent; i++) {
            if (Student[i].getId().equals(newId) && !Student[i].getId().equals(id)) {
                found = true;
                errTextID.setText("ID alredy exists!");
            }
            if (Student[i].getUsername().equals(username) && !Student[i].getId().equals(id)) {
                found = true;
                errTextUsername.setText("Username already exists!");
            }
        }

        if (found == false) {
            if (!newId.equals(id)) {
                for (int i = 0; i < counterStudent; i++) {
                    if (Student[i].getId().equals(id)) {

                        Student[i].setId(newId);
                    }
                }

                for (int i = 0; i < finalGradeCounter; i += 3) {
                    if (finalGrade[i + 1].equals(id)) {
                        finalGrade[i + 1] = newId;
                    }
                }

                for (int i = 0; i < counterObligations; i++) {
                    if (arrayObligations[i].getStudentID().equals(id)) {
                        arrayObligations[i].setStudentID(newId);
                    }
                }
            }

            if (!newName.equals(name)) {
                for (int i = 0; i < counterStudent; i++) {
                    if (Student[i].getName().equals(name)) {

                        Student[i].setName(newName);
                    }
                }

                for (int i = 0; i < counterObligations; i++) {
                    if (arrayObligations[i].getStudentName().equals(name)) {
                        arrayObligations[i].setStudentName(newName);
                    }
                }
            }

            if (!newUsername.equals(username)) {
                for (int i = 0; i < counterStudent; i++) {
                    if (Student[i].getUsername().equals(username)) {

                        Student[i].setUsername(newUsername);
                    }
                }
            }

            if (!newPass.equals(pass)) {
                for (int i = 0; i < counterStudent; i++) {
                    if (Student[i].getId().equals(newId)) {

                        Student[i].setPassword(newPass);
                    }
                }
            }

            if (!newYear.equals(year)) {
                for (int i = 0; i < counterObligations; i++) {
                    if (arrayObligations[i].getStudentID().equals(newId)) {
                        for (int j = i; j < counterObligations - 1; j++) {
                            arrayObligations[j].setGrade(arrayObligations[j + 1].getGrade());
                            arrayObligations[j].setMaximumPoints(arrayObligations[j + 1].getMaximumPoints());
                            arrayObligations[j].setObligationName(arrayObligations[j + 1].getObligationName());
                            arrayObligations[j].setObligationType(arrayObligations[j + 1].getObligationType());
                            arrayObligations[j].setPrecentage(arrayObligations[j + 1].getPrecentage());
                            arrayObligations[j].setScoredPoints(arrayObligations[j + 1].getScoredPoints());
                            arrayObligations[j].setStudentID(arrayObligations[j + 1].getStudentID());
                            arrayObligations[j].setStudentName(arrayObligations[j + 1].getStudentName());
                            arrayObligations[j].setSubjectName(arrayObligations[j + 1].getSubjectName());
                        }
                        counterObligations--;
                    }
                }

                for (int i = 0; i < finalGradeCounter; i += 3) {
                    if (finalGrade[i + 1].equals(newId)) {
                        for (int j = i; j < finalGradeCounter - 1; j += 3) {
                            finalGrade[j] = finalGrade[j + 3];
                            finalGrade[j + 1] = finalGrade[j + 4];
                            finalGrade[j + 2] = finalGrade[j + 5];
                        }
                        finalGradeCounter -= 3;
                    }
                }

                String newYearStudentID = "";
                found = false;
                for (int i = 0; i < counterStudent; i++) {
                    if (Student[i].getStudy_year().equals(newYear) && found == false) {
                        newYearStudentID = Student[i].getId();
                        found = true;
                    }
                }

                for (int i = 0; i < counterObligations; i++) {
                    if (arrayObligations[i].getStudentID().equals(newYearStudentID)) {
                        arrayObligations[counterObligations] = new Obligations();
                        arrayObligations[counterObligations].setStudentID(newId);
                        arrayObligations[counterObligations].setSubjectName(arrayObligations[i].getSubjectName());
                        arrayObligations[counterObligations].setStudentName(newName);
                        arrayObligations[counterObligations].setObligationType(arrayObligations[i].getObligationType());
                        arrayObligations[counterObligations].setObligationName(arrayObligations[i].getObligationName());
                        arrayObligations[counterObligations].setMaximumPoints(arrayObligations[i].getMaximumPoints());
                        arrayObligations[counterObligations].setScoredPoints(0);
                        arrayObligations[counterObligations].setPrecentage(0);
                        arrayObligations[counterObligations].setGrade(0);
                        counterObligations++;
                    }
                }
                
                for (int i = 0; i < finalGradeCounter; i += 3) {
                    if (finalGrade[i + 1] != null) {

                    }
                    if (finalGrade[i + 1].equals(newYearStudentID)) {
                        finalGrade[finalGradeCounter] = finalGrade[i];
                        finalGradeCounter++;
                        finalGrade[finalGradeCounter] = newId;
                        finalGradeCounter++;
                        finalGrade[finalGradeCounter] = "0";
                        finalGradeCounter++;
                    }
                }

                for (int i = 0; i < counterStudent; i++) {
                    if (Student[i].getId().equals(newId)) {

                        Student[i].setStudy_year(newYear);
                    }
                }
            }

            WriteStudent();
            dispose();
        }

    }//GEN-LAST:event_adjustStudentBtnActionPerformed

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void studentYearTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studentYearTextFieldKeyTyped
        char enteredChar = evt.getKeyChar();

        if (!Character.isDigit(enteredChar)) {
            evt.consume();
        }
    }//GEN-LAST:event_studentYearTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdjustStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdjustStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdjustStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdjustStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdjustStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private AddOns.MyButton adjustStudentBtn;
    private javax.swing.JLabel errTextID;
    private javax.swing.JLabel errTextName;
    private javax.swing.JLabel errTextPass;
    private javax.swing.JLabel errTextUsername;
    private javax.swing.JLabel errTextYear;
    private AddOns.ProfilePicture exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private AddOns.TransparentPanel newJPanel1;
    private static javax.swing.JTextField studentIDTextField;
    private static javax.swing.JTextField studentNameTextField;
    private static javax.swing.JTextField studentPassTextField;
    private static javax.swing.JTextField studentUsernameTextField;
    private static javax.swing.JTextField studentYearTextField;
    // End of variables declaration//GEN-END:variables
}
