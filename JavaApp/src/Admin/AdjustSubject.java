/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import static Admin.AdminFrame.WriteSubjects;
import static Admin.AdminFrame.returnCounterObligations;
import static JavaApp.LogInFrame.Student;
import static JavaApp.LogInFrame.arrayObligations;
import static JavaApp.LogInFrame.arraySubjects;
import static JavaApp.LogInFrame.counterObligations;
import static JavaApp.LogInFrame.counterProfessorAdmin;
import static JavaApp.LogInFrame.counterStudent;
import static JavaApp.LogInFrame.counterSubjectObligations;
import static JavaApp.LogInFrame.counterSubjects;
import static JavaApp.LogInFrame.finalGrade;
import static JavaApp.LogInFrame.finalGradeCounter;
import static JavaApp.LogInFrame.professorAdmin;
import static JavaApp.LogInFrame.subjectObligations;
import java.awt.Color;
import java.util.Arrays;

/**
 *
 * @author Samardzija Njegos
 */
public class AdjustSubject extends javax.swing.JFrame {

    /**
     * Creates new form AdjustSubject
     */
    public AdjustSubject() {
        initComponents();
        setBackground(new Color(0, 0, 0, 0));
        errTextID.setText(" ");
        errTextECTS.setText(" ");
        errTextName.setText(" ");
        errTextYear.setText(" ");
        errTextSemester.setText(" ");
        errTextObligations.setText(" ");
    }

    String id = "";
    String name = "";
    String semester = "";
    String ects = "";
    String year = "";
    String professor = "";

    public void pass(String newid, String newname, String newsemester, String newects, String newyear, String newprofessor) {
        boolean found = false;
        id = newid;
        name = newname;
        semester = newsemester;
        ects = newects;
        year = newyear;
        professor = newprofessor;

        subjectIDTextField.setText(id);
        subjectNameTextField.setText(name);
        subjectSemesterTextField.setText(semester);
        subjectECTSTextField.setText(ects);
        subjectYearTextField.setText(year);
        String[] temp = new String[20];
        int num = 0;
        for (int i = 0; i < counterProfessorAdmin; i++) {
            for (int j = 0; j < counterSubjects; j++) {
                if (arraySubjects[j].getProfessorID().equals(professorAdmin[i].getID())) {
                    found = true;
                }
            }
            if (found == false) {
                jComboBox1.addItem(professorAdmin[i].getID() + " - " + professorAdmin[i].getName());
            }
            found = false;
        }

        for (int i = 0; i < counterProfessorAdmin; i++) {
            if (professorAdmin[i].getName().equals(professor)) {
                jComboBox1.addItem(professorAdmin[i].getID() + " - " + professorAdmin[i].getName());
                jComboBox1.setSelectedItem(professorAdmin[i].getID() + " - " + professorAdmin[i].getName());
            }
        }

        for (int j = 0; j < counterSubjects; j++) {
            if (arraySubjects[j].getProfessor().equals(professor)) {
                temp = arraySubjects[j].getObligations();
                num = arraySubjects[j].getNumberOfObligations();
            }
        }

        for (int i = 0; i < num * 2; i += 2) {
            subjectObligationsTextField.append(temp[i] + " " + temp[i + 1] + "\n");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newJPanel1 = new AddOns.TransparentPanel();
        subjectIDTextField = new javax.swing.JTextField();
        subjectNameTextField = new javax.swing.JTextField();
        subjectSemesterTextField = new javax.swing.JTextField();
        subjectECTSTextField = new javax.swing.JTextField();
        subjectYearTextField = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        adjustSubjectBtn = new AddOns.MyButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        subjectObligationsTextField = new javax.swing.JTextArea();
        exit = new AddOns.ProfilePicture();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        errTextID = new javax.swing.JLabel();
        errTextECTS = new javax.swing.JLabel();
        errTextName = new javax.swing.JLabel();
        errTextYear = new javax.swing.JLabel();
        errTextSemester = new javax.swing.JLabel();
        errTextObligations = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        newJPanel1.setBackground(new java.awt.Color(87, 87, 87));

        subjectIDTextField.setBackground(new java.awt.Color(87, 87, 87));
        subjectIDTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subjectIDTextField.setForeground(new java.awt.Color(255, 255, 255));
        subjectIDTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        subjectIDTextField.setSelectedTextColor(new java.awt.Color(87, 87, 87));
        subjectIDTextField.setSelectionColor(new java.awt.Color(255, 255, 255));

        subjectNameTextField.setBackground(new java.awt.Color(87, 87, 87));
        subjectNameTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subjectNameTextField.setForeground(new java.awt.Color(255, 255, 255));
        subjectNameTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        subjectNameTextField.setSelectedTextColor(new java.awt.Color(87, 87, 87));
        subjectNameTextField.setSelectionColor(new java.awt.Color(255, 255, 255));

        subjectSemesterTextField.setBackground(new java.awt.Color(87, 87, 87));
        subjectSemesterTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subjectSemesterTextField.setForeground(new java.awt.Color(255, 255, 255));
        subjectSemesterTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        subjectSemesterTextField.setSelectedTextColor(new java.awt.Color(87, 87, 87));
        subjectSemesterTextField.setSelectionColor(new java.awt.Color(255, 255, 255));

        subjectECTSTextField.setBackground(new java.awt.Color(87, 87, 87));
        subjectECTSTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subjectECTSTextField.setForeground(new java.awt.Color(255, 255, 255));
        subjectECTSTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        subjectECTSTextField.setSelectedTextColor(new java.awt.Color(87, 87, 87));
        subjectECTSTextField.setSelectionColor(new java.awt.Color(255, 255, 255));
        subjectECTSTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                subjectECTSTextFieldKeyTyped(evt);
            }
        });

        subjectYearTextField.setBackground(new java.awt.Color(87, 87, 87));
        subjectYearTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subjectYearTextField.setForeground(new java.awt.Color(255, 255, 255));
        subjectYearTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        subjectYearTextField.setSelectedTextColor(new java.awt.Color(87, 87, 87));
        subjectYearTextField.setSelectionColor(new java.awt.Color(255, 255, 255));
        subjectYearTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                subjectYearTextFieldKeyTyped(evt);
            }
        });

        adjustSubjectBtn.setText("Adjust Subject");
        adjustSubjectBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        adjustSubjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adjustSubjectBtnActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);
        jScrollPane1.setRequestFocusEnabled(false);

        subjectObligationsTextField.setBackground(new java.awt.Color(87, 87, 87));
        subjectObligationsTextField.setColumns(20);
        subjectObligationsTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subjectObligationsTextField.setForeground(new java.awt.Color(255, 255, 255));
        subjectObligationsTextField.setRows(5);
        subjectObligationsTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        subjectObligationsTextField.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(subjectObligationsTextField);

        exit.setBackground(new java.awt.Color(67, 67, 67));
        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/turn-off.png"))); // NOI18N
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Adjust Subject");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Adjust ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Adjust name:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Adjust semester:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Adjust professor:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Adjust ECTS points:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Adjust Year:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Adjust obligations:");

        errTextID.setForeground(java.awt.Color.red);
        errTextID.setText("jLabel9");

        errTextECTS.setForeground(java.awt.Color.red);
        errTextECTS.setText("jLabel10");

        errTextName.setForeground(java.awt.Color.red);
        errTextName.setText("jLabel11");

        errTextYear.setForeground(java.awt.Color.red);
        errTextYear.setText("jLabel12");

        errTextSemester.setForeground(java.awt.Color.red);
        errTextSemester.setText("jLabel13");

        errTextObligations.setForeground(java.awt.Color.red);
        errTextObligations.setText("jLabel14");

        javax.swing.GroupLayout newJPanel1Layout = new javax.swing.GroupLayout(newJPanel1);
        newJPanel1.setLayout(newJPanel1Layout);
        newJPanel1Layout.setHorizontalGroup(
            newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newJPanel1Layout.createSequentialGroup()
                .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newJPanel1Layout.createSequentialGroup()
                        .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newJPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newJPanel1Layout.createSequentialGroup()
                                .addGap(337, 337, 337)
                                .addComponent(adjustSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(newJPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 840, Short.MAX_VALUE)
                            .addGroup(newJPanel1Layout.createSequentialGroup()
                                .addComponent(errTextID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(errTextECTS, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newJPanel1Layout.createSequentialGroup()
                                .addComponent(errTextName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(errTextYear, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(newJPanel1Layout.createSequentialGroup()
                                .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(subjectNameTextField)
                                    .addComponent(subjectSemesterTextField)
                                    .addComponent(jComboBox1, 0, 411, Short.MAX_VALUE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(subjectIDTextField)
                                    .addComponent(jLabel2)
                                    .addComponent(errTextSemester, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(errTextObligations, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                                    .addComponent(subjectYearTextField)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                                    .addComponent(subjectECTSTextField))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        newJPanel1Layout.setVerticalGroup(
            newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newJPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(newJPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(errTextID)
                            .addComponent(errTextECTS))
                        .addGap(17, 17, 17)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(newJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(errTextName)
                            .addComponent(errTextYear))
                        .addGap(17, 17, 17)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectSemesterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errTextSemester)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newJPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectECTSTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subjectYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errTextObligations)
                .addGap(17, 17, 17)
                .addComponent(adjustSubjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void adjustSubjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adjustSubjectBtnActionPerformed
        String newid = subjectIDTextField.getText();
        String newname = subjectNameTextField.getText();
        String newsemester = subjectSemesterTextField.getText();
        String newects = subjectECTSTextField.getText();
        String newyear = subjectYearTextField.getText();
        String[] newprofessor = jComboBox1.getSelectedItem().toString().split(" - ");
        String poljeAttribute[] = subjectObligationsTextField.getText().split("\n");

        boolean isValid = true, obligationsGood = false, semesterGood = false, yearGood = false, idGood = false, nameGood = false, professorGood = false, ectsGood = false;
        double allPoints = 0;

        errTextID.setText(" ");
        errTextECTS.setText(" ");
        errTextName.setText(" ");
        errTextYear.setText(" ");
        errTextSemester.setText(" ");
        errTextObligations.setText(" ");

        if ("".equals(subjectObligationsTextField.getText())) {
            isValid = false;
        } else {
            for (int j = 0; j < poljeAttribute.length; j++) {
                int str = poljeAttribute[j].lastIndexOf(" ");
                String strnew = poljeAttribute[j].substring(0, str);
                double strnew2 = Double.parseDouble(poljeAttribute[j].substring(str + 1));
                allPoints += strnew2;

            }

            if (allPoints != 100) {
                isValid = false;
            }
        }
        if ("1".equals(subjectYearTextField.getText()) || "2".equals(subjectYearTextField.getText()) || "3".equals(subjectYearTextField.getText())) {
            errTextYear.setText(" ");
            yearGood = true;
        } else {
            errTextYear.setText("Year must be 1, 2 or 3!");
            yearGood = false;
        }
        if ("summer".equals(subjectSemesterTextField.getText().trim().toLowerCase()) || "winter".equals(subjectSemesterTextField.getText().trim().toLowerCase())) {
            errTextSemester.setText(" ");
            semesterGood = true;
        } else {
            errTextSemester.setText("Semester must be Winter or Summer!");
            semesterGood = false;
        }
        if (isValid == false) {
            errTextObligations.setText("Obligations not entered correctly!");
            obligationsGood = false;
        } else {
            errTextObligations.setText(" ");
            obligationsGood = true;
        }
        if ("".equals(subjectIDTextField.getText()) || subjectIDTextField.getText() == null) {
            errTextID.setText("Subject ID not entered!");
            idGood = false;
        } else {
            for (int i = 0; i < counterSubjects; i++) {
                if (arraySubjects[i].getId().equals(subjectIDTextField.getText()) && !arraySubjects[i].getId().equals(id)) {
                    errTextID.setText("ID alredy exists!");
                    idGood = false;
                } else {
                    errTextID.setText(" ");
                    idGood = true;
                }
            }

        }
        if ("".equals(subjectNameTextField.getText()) || subjectNameTextField.getText() == null) {
            errTextName.setText("Subject name not entered!");
            nameGood = false;
        } else {
            for (int i = 0; i < counterSubjects; i++) {
                if (arraySubjects[i].getName().equals(subjectNameTextField.getText()) && !arraySubjects[i].getName().equals(name)) {
                    errTextName.setText("Name already exists!");
                    nameGood = false;
                } else {
                    errTextName.setText(" ");
                    nameGood = true;
                }
            }
        }
        if ("".equals(subjectECTSTextField.getText()) || subjectECTSTextField.getText() == null) {
            errTextECTS.setText("ECTS points not entered!");
            ectsGood = false;
        } else {
            errTextECTS.setText(" ");
            ectsGood = true;
        }

        if (obligationsGood == true && semesterGood == true && yearGood == true && idGood == true && nameGood == true && professorGood == true && ectsGood == true) {

            if (!newid.equals(id)) {
                for (int i = 0; i < counterSubjects; i++) {
                    if (arraySubjects[i].getId().equals(id)) {

                        arraySubjects[i].setId(newid);
                    }
                }

                for (int i = 0; i < finalGradeCounter; i += 3) {
                    if (finalGrade[i].equals(id)) {

                        finalGrade[i] = newid;
                    }
                }

                for (int i = 0; i < counterObligations; i++) {
                    if (arrayObligations[i].getSubjectName().equals(id)) {

                        arrayObligations[i].setSubjectName(newid);
                    }
                }
            }

            if (!newname.equals(name)) {
                for (int i = 0; i < counterSubjects; i++) {
                    if (arraySubjects[i].getId().equals(newid)) {
                        arraySubjects[i].setName(newname);
                    }
                }
            }

            if (!newsemester.equals(semester)) {
                for (int i = 0; i < counterSubjects; i++) {
                    if (arraySubjects[i].getId().equals(newid)) {
                        arraySubjects[i].setSemester(newsemester);
                    }
                }
            }

            if (!newects.equals(ects)) {
                for (int i = 0; i < counterSubjects; i++) {
                    if (arraySubjects[i].getId().equals(newid)) {
                        arraySubjects[i].setEctsPoints(Integer.parseInt(newects));
                    }
                }
            }

            if (!newprofessor[1].equals(professor)) {
                for (int i = 0; i < counterSubjects; i++) {
                    if (arraySubjects[i].getId().equals(newid)) {
                        arraySubjects[i].setProfessor(newprofessor[1]);
                        arraySubjects[i].setProfessorID(newprofessor[0]);
                    }
                }
            }

            if (!newyear.equals(year)) {
                for (int i = 0; i < counterSubjects; i++) {
                    if (arraySubjects[i].getId().equals(newid)) {
                        arraySubjects[i].setYear(Integer.parseInt(newyear));
                    }
                }

                for (int i = 0; i < counterObligations; i++) {
                    if (arrayObligations[i].getSubjectName().equals(newid)) {
                        for (int j = i; j < counterObligations - 1; j++) {
                            arrayObligations[j].setGrade(arrayObligations[j + 1].getGrade());
                            arrayObligations[j].setMaximumPoints(arrayObligations[j + 1].getMaximumPoints());
                            arrayObligations[j].setObligationName(arrayObligations[j + 1].getObligationName());
                            arrayObligations[j].setObligationType(arrayObligations[j + 1].getObligationType());
                            arrayObligations[j].setPrecentage(arrayObligations[j + 1].getPrecentage());
                            arrayObligations[j].setScoredPoints(arrayObligations[j + 1].getScoredPoints());
                            arrayObligations[j].setStudentID(arrayObligations[j + 1].getStudentID());
                            arrayObligations[j].setStudentName(arrayObligations[j + 1].getStudentName());
                            arrayObligations[j].setSubjectName(arrayObligations[j + 1].getSubjectName());
                        }
                        counterObligations--;
                    }
                }
            }

            for (int i = 0; i < counterSubjects; i++) {
                if (arraySubjects[i].getId().equals(newid)) {
                    int counter = 0;
                    for (int j = 0; j < poljeAttribute.length; j++) {
                        int str = poljeAttribute[j].lastIndexOf(" ");
                        String strnew = poljeAttribute[j].substring(0, str);
                        int strnew2 = Integer.parseInt(poljeAttribute[j].substring(str + 1));
                        arraySubjects[i].setObligations(strnew, strnew2, j + 1);
                        counter++;
                    }
                    arraySubjects[i].setNumberOfObligations(counter);
                }
            }
            returnCounterObligations(counterObligations);
            WriteSubjects();
            dispose();
        }
    }//GEN-LAST:event_adjustSubjectBtnActionPerformed

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        dispose();
    }//GEN-LAST:event_exitMouseClicked

    private void subjectECTSTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subjectECTSTextFieldKeyTyped
        char enteredChar = evt.getKeyChar();

        if (!Character.isDigit(enteredChar)) {
            evt.consume();
        }
    }//GEN-LAST:event_subjectECTSTextFieldKeyTyped

    private void subjectYearTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subjectYearTextFieldKeyTyped
        char enteredChar = evt.getKeyChar();

        if (!Character.isDigit(enteredChar)) {
            evt.consume();
        }
    }//GEN-LAST:event_subjectYearTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdjustSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdjustSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdjustSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdjustSubject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdjustSubject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private AddOns.MyButton adjustSubjectBtn;
    private javax.swing.JLabel errTextECTS;
    private javax.swing.JLabel errTextID;
    private javax.swing.JLabel errTextName;
    private javax.swing.JLabel errTextObligations;
    private javax.swing.JLabel errTextSemester;
    private javax.swing.JLabel errTextYear;
    private AddOns.ProfilePicture exit;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private AddOns.TransparentPanel newJPanel1;
    private javax.swing.JTextField subjectECTSTextField;
    private javax.swing.JTextField subjectIDTextField;
    private javax.swing.JTextField subjectNameTextField;
    private javax.swing.JTextArea subjectObligationsTextField;
    private javax.swing.JTextField subjectSemesterTextField;
    private javax.swing.JTextField subjectYearTextField;
    // End of variables declaration//GEN-END:variables
}
